<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.flyfishshop.dao.UserDao">

    <sql id="Columns">select id,
                             account,
                             password,
                             name,
                             sex,
                             birthday,
                             phone,
                             email,
                             card_id,
                             description,
                             avatar,
                             created_time,
                             created_by,
                             last_modified_time as updated_time,
                             last_modified_by   as updated_by,
                             qq,
                             wechat
                      from t_member
    </sql>

    <select id="findAll" resultType="User">
        <include refid="Columns"/>
        <where>
            <if test="id!=null">
                and id = #{id}
            </if>
            <if test="account!=null and account!=''">
                <bind name="accountLike" value="'%'+account+'%'"/>
                and account like #{accountLike}
            </if>
            <if test="name!=null and name!=''">
                <bind name="nameLike" value="'%'+name+'%'"/>
                and `name` like #{nameLike}
            </if>
            <if test="sex!=null and sex!= ''">
                and sex = #{sex}
            </if>
            <if test="birthdayFrom!=null">
                and birthday &gt; #{birthdayFrom}
            </if>
            <if test="birthdayTo!=null">
                and birthday &lt; #{birthdayTo}
            </if>
        </where>
    </select>
    <delete id="deleteByIds">
        delete from t_member where id in
        <foreach collection="ids" open="(" close=")" item="id" separator=",">#{id}</foreach>
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into t_member(account, password, name, sex, birthday, phone, email, card_id, description, avatar,
                             created_time, created_by, last_modified_time, last_modified_by)
        values (#{account}, #{password}, #{name}, #{sex}, #{birthday}, #{phone}, #{email}, #{cardId}, #{description},
                #{avatar}, #{createdTime}, #{createdBy}, #{updatedTime}, #{updatedBy})
    </insert>
    <update id="update">
        update t_member
        <set>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="cardId != null and cardId != ''">
                card_id = #{cardId},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="updatedTime != null">
                last_modified_time = #{updatedTime},
            </if>
            <if test="updatedBy!=null and updatedBy!=''">
                last_modified_by=#{updatedBy}
            </if>
        </set>
        where id =#{id}
    </update>

    <select id="findById" resultType="User">
        <include refid="Columns"/>
        <where>
            id = #{id}
        </where>
    </select>
    <select id="getUserByAccountForLogin" resultType="User">
        <include refid="Columns"></include>
        <where>account=#{account}</where>
    </select>

</mapper>
